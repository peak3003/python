# задание 1
# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать
# у пользователя, а указать явно, в программе.
my_lists = ['Привет', 1234, 841.32, True]
for my_list in my_lists:
    print(f'Элемент "{my_list}" имеет тип {type(my_list)}')

# задание 2
# Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

# создаем список
count = int(input('Введите количество элементов: '))
my_list = []
for i in range(count):
    my_list.append(input('Введите элемент последовательность: '))
print('Первоначальный список: ', list(my_list))
#
# # меняем местами
for i in range(0,count-1,2):  #
    my_list[i],my_list[i+1]=my_list[i+1],my_list[i]
print('Реверсный список: ', my_list)

# задание 3
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).\
# Напишите решения через list и через dict.

# через dict
months = {'1': 'зима',
          '2': 'зима',
          '3': 'весна',
          '4': 'весна',
          '5': 'весна',
          '6': 'лето',
          '7': 'лето',
          '8': 'лето',
          '9': 'осень',
          '10': 'осень',
          '11': 'осень',
          '12': 'зима'
          }
a = input('Вводите месяц в виде целого числа от 1 до 12: ')
if a in months:
    print('Время года: ', months.get(a))
else:
    print('Ввели неправильно месяц')

# через list
months_list =['','зима','зима','весна','весна','весна','лето','лето','лето','осень','осень','осень','зима']
a = int(input('Вводите месяц в виде целого числа от 1 до 12: '))
print(f'Время года: {months_list[a]}')

# задание 4
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

a = input('Введите слова через пробел: ').split()
i=0
for el in a:
    i+=1
    print(f'Номер строки: {i}, значение: {el[:9]}')

# задание 5
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же
# значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
new_el = int(input('Введите новый элемент рейтинга: '))
# my_list.append(input('Введите новый элемент рейтинга: '))
for ind, el in enumerate(my_list):
    # print(ind, el) # выводит пару: порядковый номер элемента и значение самого элимента
    if new_el <= my_list[ind]:
        continue
    my_list.insert(ind, new_el)
    print(my_list)
    break
else:
    my_list.append(new_el)
    print(my_list)


# задание 6. *
# Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

# создаем пустые списки

# analitik = ('название':[], 'цена':[], 'количество': [],'ед': [])
# count = int(input('Введите количество товаров: '))
# i=0
# while i <= count:
#     analitik.append()

goods = []
features = {'название': '', 'цена': '', 'количество': '', 'единица измерения': ''}
analitics = {'название': [], 'цена': [], 'количество': [], 'единица измерения': []}
num = 0
while True:
    if input('Выход - Q, \nЛюбая клавиша - продолжить: ').upper() == 'Q':
        break
    num += 1
    for f in features.keys():
        user_data = input('{}: '.format(f))
        features[f] = int(user_data) if (f == 'цена' or f == 'количество') else user_data
        analitics[f].append(features[f])
    goods.append((num, features))  # используем кортеж
    print('Текущая аналитика по товарам:\n')
    for key, value in analitics.items():
        print(key, value)
# не мое